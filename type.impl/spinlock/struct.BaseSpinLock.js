(function() {var type_impls = {
"spinlock":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BaseSpinLock%3CG,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#49-69\">source</a><a href=\"#impl-BaseSpinLock%3CG,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"kernel_guard/trait.BaseGuard.html\" title=\"trait kernel_guard::BaseGuard\">BaseGuard</a>, T&gt; <a class=\"struct\" href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\">BaseSpinLock</a>&lt;G, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#52-59\">source</a><h4 class=\"code-header\">pub const fn <a href=\"spinlock/struct.BaseSpinLock.html#tymethod.new\" class=\"fn\">new</a>(data: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\"><code>BaseSpinLock</code></a> wrapping the supplied data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#63-68\">source</a><h4 class=\"code-header\">pub fn <a href=\"spinlock/struct.BaseSpinLock.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Consumes this <a href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\"><code>BaseSpinLock</code></a> and unwraps the underlying data.</p>\n</div></details></div></details>",0,"spinlock::SpinNoPreempt","spinlock::SpinNoIrq","spinlock::SpinRaw"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BaseSpinLock%3CG,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#71-175\">source</a><a href=\"#impl-BaseSpinLock%3CG,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"kernel_guard/trait.BaseGuard.html\" title=\"trait kernel_guard::BaseGuard\">BaseGuard</a>, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\">BaseSpinLock</a>&lt;G, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#77-101\">source</a><h4 class=\"code-header\">pub fn <a href=\"spinlock/struct.BaseSpinLock.html#tymethod.lock\" class=\"fn\">lock</a>(&amp;self) -&gt; <a class=\"struct\" href=\"spinlock/struct.BaseSpinLockGuard.html\" title=\"struct spinlock::BaseSpinLockGuard\">BaseSpinLockGuard</a>&lt;'_, G, T&gt;</h4></section></summary><div class=\"docblock\"><p>Locks the <a href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\"><code>BaseSpinLock</code></a> and returns a guard that permits access to the inner data.</p>\n<p>The returned value may be dereferenced for data access\nand the lock will be dropped when the guard falls out of scope.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_locked\" class=\"method\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#110-118\">source</a><h4 class=\"code-header\">pub fn <a href=\"spinlock/struct.BaseSpinLock.html#tymethod.is_locked\" class=\"fn\">is_locked</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the lock is currently held.</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>This function provides no synchronization guarantees and so its result should be considered ‘out of date’\nthe instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_lock\" class=\"method\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#122-149\">source</a><h4 class=\"code-header\">pub fn <a href=\"spinlock/struct.BaseSpinLock.html#tymethod.try_lock\" class=\"fn\">try_lock</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"spinlock/struct.BaseSpinLockGuard.html\" title=\"struct spinlock::BaseSpinLockGuard\">BaseSpinLockGuard</a>&lt;'_, G, T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Try to lock this <a href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\"><code>BaseSpinLock</code></a>, returning a lock guard if successful.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.force_unlock\" class=\"method\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#159-162\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"spinlock/struct.BaseSpinLock.html#tymethod.force_unlock\" class=\"fn\">force_unlock</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Force unlock this <a href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\"><code>BaseSpinLock</code></a>.</p>\n<h5 id=\"safety-1\"><a href=\"#safety-1\">Safety</a></h5>\n<p>This is <em>extremely</em> unsafe if the lock is not held by the current\nthread. However, this can be useful in some instances for exposing the\nlock to FFI that doesn’t know how to deal with RAII.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#170-174\">source</a><h4 class=\"code-header\">pub fn <a href=\"spinlock/struct.BaseSpinLock.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the underlying data.</p>\n<p>Since this call borrows the <a href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\"><code>BaseSpinLock</code></a> mutably, and a mutable reference is guaranteed to be exclusive in\nRust, no actual locking needs to take place – the mutable borrow statically guarantees no locks exist. As\nsuch, this is a ‘zero-cost’ operation.</p>\n</div></details></div></details>",0,"spinlock::SpinNoPreempt","spinlock::SpinNoIrq","spinlock::SpinRaw"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-BaseSpinLock%3CG,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#177-182\">source</a><a href=\"#impl-Default-for-BaseSpinLock%3CG,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"kernel_guard/trait.BaseGuard.html\" title=\"trait kernel_guard::BaseGuard\">BaseGuard</a>, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\">BaseSpinLock</a>&lt;G, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#179-181\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","spinlock::SpinNoPreempt","spinlock::SpinNoIrq","spinlock::SpinRaw"],["<section id=\"impl-Send-for-BaseSpinLock%3CG,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#47\">source</a><a href=\"#impl-Send-for-BaseSpinLock%3CG,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"kernel_guard/trait.BaseGuard.html\" title=\"trait kernel_guard::BaseGuard\">BaseGuard</a>, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\">BaseSpinLock</a>&lt;G, T&gt;</h3></section>","Send","spinlock::SpinNoPreempt","spinlock::SpinNoIrq","spinlock::SpinRaw"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BaseSpinLock%3CG,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#184-193\">source</a><a href=\"#impl-Debug-for-BaseSpinLock%3CG,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"kernel_guard/trait.BaseGuard.html\" title=\"trait kernel_guard::BaseGuard\">BaseGuard</a>, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\">BaseSpinLock</a>&lt;G, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#185-192\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","spinlock::SpinNoPreempt","spinlock::SpinNoIrq","spinlock::SpinRaw"],["<section id=\"impl-Sync-for-BaseSpinLock%3CG,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/spinlock/base.rs.html#46\">source</a><a href=\"#impl-Sync-for-BaseSpinLock%3CG,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"kernel_guard/trait.BaseGuard.html\" title=\"trait kernel_guard::BaseGuard\">BaseGuard</a>, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"spinlock/struct.BaseSpinLock.html\" title=\"struct spinlock::BaseSpinLock\">BaseSpinLock</a>&lt;G, T&gt;</h3></section>","Sync","spinlock::SpinNoPreempt","spinlock::SpinNoIrq","spinlock::SpinRaw"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()